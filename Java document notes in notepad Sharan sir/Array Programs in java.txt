Array Programs:
From given array find the pairs which have sum is equal to target value

Example:
int a[]={1,7,8,4,0,3,0,0,3,4};
Target = 8

1 7
8 0
8 0
8 0
4 4

import java.util.*;
class Main {
    public static void main(String[] args) {
        int a[]={1,7,8,4,0,3,0,0,3,4};
        
        for(int i=0;i<a.length;i++)
        {
            for(int j=i+1;j<a.length;j++)
            {
                if(a[i]+a[j]==8)
                {
                    System.out.println(a[i]+" "+a[j]);
                }
            }
        }
}
}
----------------------------------------------------------------------------------------
Program to shuffle 0 at end 

// Online Java Compiler
// Use this editor to write, compile and run your Java code online
import java.util.*;
class Main {
    public static void main(String[] args) {
        
        //create arraylist and store some elements and display in different ways
        
        int arr[]={1,7,8,4,0,3,0,0,3,4};
        int count=0;
        
        for(int i=0;i<arr.length;i++)
        {
            if(arr[i]!=0)
            {
                
               arr[count]=arr[i];
               count++;
            }
            
        }
        
        while(count<arr.length)
        {
            arr[count++]=0;
        }
        
        for(int i=0;i<arr.length;i++)
        {
             System.out.println(arr[i]);
        }

    }
}


-----------------------------------------------------------------------------------------
class Main {
    public static void main(String[] args) {
        
        //create arraylist and store some elements and display in different ways
        
        LinkedList<String> al=new LinkedList<>();
        
        al.add("a");
        al.add("b");
        al.add("c");
        al.add("c");
        al.add("b");
        
        // display all elements
        System.out.println(al);
        
        // using for each
        for(String i:al)
        {
            System.out.println(i);
        }
        
        // using streams(advanced)
        al.forEach(i -> System.out.println(i));
        
        // Iterator
        Iterator<String> ii = al.iterator();
        
        while(ii.hasNext())
        {
            System.out.println(ii.next());
        }
    }
}
---------------------------------------------------------------------------------------

class Main {
    public static void main(String[] args) {
        
        //create arraylist and store some elements and display in different ways
        
        LinkedList<Integer> al=new LinkedList<>();
        
        al.add(1);
        al.add(2);
        al.add(3);
        al.add(1);
        al.add(2);
        
        // display all elements
        System.out.println(al);
        
        al.remove(3);
        
        System.out.println(al);
        
        al.set(2,10);
        
        System.out.println(al);
-----------------------------------------------------------------------------------------------

class Main {
    public static void main(String[] args) {
        
        //create arraylist and store some elements and display in different ways
        
        LinkedList<String> al=new LinkedList<>();
        
        al.add("a");
        al.add("b");
        al.add("c");
        al.add("a");
        al.add("b");
        
        // display all elements
        System.out.println(al);
        
        al.remove("b");
        
        System.out.println(al);
        
        // update
        al.set(2,"j");
        
        System.out.println(al);

}
}

------------------------------------------------------------------------------------
class Main {
    public static void main(String[] args) {
        
        //create arraylist and store some elements and display in different ways
        
        ArrayList<String> al=new ArrayList<>();
        
        al.add("sneha");
        al.add("nawaz");
        al.add("sunitha");
        al.add("nanda");
        al.add("poojitha");
        
        String s[]=new String[al.size()];
        for(int i=0;i<al.size();i++)
        {
            s[i]=al.get(i);
        }
        
        // display all elements
        for(String ss: s)
        {
            System.out.println(ss);
        }
}
}

------------------------------------------------------------------------------
Creating sub list:
~~~~~~~~~~~~~~

// Online Java Compiler
// Use this editor to write, compile and run your Java code online
import java.util.*;
class Main {
    public static void main(String[] args) {
        
        //create arraylist and store some elements and display in different ways
        
        ArrayList<String> al=new ArrayList<>();
        
        al.add("sneha");
        al.add("nawaz");
        al.add("sunitha");
        al.add("nanda");
        al.add("poojitha");
        
        List<String> l=al.subList(0,3);
        System.out.println(l);
----------------------------------------------------------------------------------
Sorting:
~~~~~~~~

1. Descending order

// Online Java Compiler
// Use this editor to write, compile and run your Java code online
import java.util.*;
class Main {
    public static void main(String[] args) {
        
        //create arraylist and store some elements and display in different ways
        
        ArrayList<String> al=new ArrayList<>();
        
        al.add("sneha");
        al.add("nawaz");
        al.add("sunitha");
        al.add("nanda");
        al.add("poojitha");
        
        List<String> l=al.subList(0,3);
        Collections.sort(l);
        System.out.println(l);
    }
}

----------------------------------------------------------------------------------
Convert List -> set:
~~~~~~~~~~~~~~~~

// Online Java Compiler
// Use this editor to write, compile and run your Java code online
import java.util.*;
class Main {
    public static void main(String[] args) {
        
        //create arraylist and store some elements and display in different ways
        String s="apple";
    
        List<String> l=new ArrayList<>();
        
        l.add("sneha");
        l.add("sunitha");
        l.add("poojitha");
        l.add("nawaz");
        l.add("sunitha");
        
         System.out.println(l);
         
         
        Set<String> al=new HashSet<String>(l);
        System.out.println(al);

    }
}

-----------------------------------------------------------------------

class Main {
    public static void main(String[] args) {
        
        //create arraylist and store some elements and display in different ways
        String s="apple";
    
        Set<Character> al=new HashSet<>();
        
       for(int i=0;i<s.length();i++)
       {
           al.add(s.charAt(i));
       }
    
    for(Character c:al)
    {
        System.out.println(c);
    }
}
}
-------------------------------------------------------------------------------------
         Only one null key is allowed in Hashmat as key but many nulls as values

// Online Java Compiler
// Use this editor to write, compile and run your Java code online
import java.util.*;
class Main {
    public static void main(String[] args) {
        
        HashMap<String, String> hm = new HashMap<String, String>();
        
        hm.put(null,null);
        hm.put(null,"sunitha");
        hm.put("C",null);
        hm.put("D","nanda");
        hm.put("E",null);
        
        System.out.println(hm);
    }
}
------------------------------------------------------------------------------
class Main {
    public static void main(String[] args) {
        
        //to count duplicate characters
        String s="hi hellow apple";
        HashMap<Character, Integer> hm = new HashMap<Character, Integer>();
        
        char c[]=s.toCharArray();
        
        for(char ch:c)
        {
            if(hm.containsKey(ch))
            {
                hm.put(ch,hm.get(ch)+1);
            }
            else
            {
                hm.put(ch,1);
            }
        }
        
        for(Map.Entry e:hm.entrySet())
        {
            System.out.println(e.getKey()+" - "+e.getValue());
        }
          

}


}

-----------------------------------------------------------------------------
Swapping of  array values?

int a[]={2,5,3,1,4};
        for(int i=0;i<4;i++)
        {
            for (int j=0;j<4;j++)
            {
                if(a[j] > a[j+1])
                {
                    int temp=a[j];
                    a[j]=a[j+1];
                    a[j+1]=temp;
                }
            }
        }
System.out.println("sorting of array="+ Arrays.toString(a));
--------------------------------------------------------------------------------
Missing of array values:

int a[]={1,2,3,5};
        int sum1=0;
        for (int i=0;i< a.length;i++)
        {
            sum1=sum1+a[i];
        }
        int sum2=0;
        for (int i=1;i<=5;i++)
        {
            sum2=sum2+i;
        }
        System.out.println(sum2-sum1);
----------------------------------------------------------------------------------------
int a[]={40,30,90,20,50};
        int max=a[0];  // int min=a[0];
        for (int i=0;i<a.length;i++)
        {
            if(a[i]>max)   //if(a[i]<min)
            {
                max=a[i];  //min=a[i]
            }
        }
        System.out.println(max);   //System.out.println(min);
--------------------------------------------------------------------------------------------




